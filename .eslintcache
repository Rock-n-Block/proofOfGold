[{"/Users/gleb/projects/proofOfGold/src/index.tsx":"1","/Users/gleb/projects/proofOfGold/src/App.tsx":"2","/Users/gleb/projects/proofOfGold/src/components/index.ts":"3","/Users/gleb/projects/proofOfGold/src/components/Header/index.tsx":"4","/Users/gleb/projects/proofOfGold/src/components/Button/index.tsx":"5","/Users/gleb/projects/proofOfGold/src/pages/index.ts":"6","/Users/gleb/projects/proofOfGold/src/pages/Home/index.tsx":"7","/Users/gleb/projects/proofOfGold/src/components/InfoCard/index.tsx":"8","/Users/gleb/projects/proofOfGold/src/pages/Franchise/index.tsx":"9","/Users/gleb/projects/proofOfGold/src/components/ProductCard/index.tsx":"10","/Users/gleb/projects/proofOfGold/src/components/ContactUsForm/index.tsx":"11","/Users/gleb/projects/proofOfGold/src/utils/validate.ts":"12","/Users/gleb/projects/proofOfGold/src/modules/index.ts":"13","/Users/gleb/projects/proofOfGold/src/modules/ContactUsForm/index.tsx":"14"},{"size":239,"mtime":1611661070808,"results":"15","hashOfConfig":"16"},{"size":465,"mtime":1611660992938,"results":"17","hashOfConfig":"16"},{"size":258,"mtime":1611661070807,"results":"18","hashOfConfig":"16"},{"size":1938,"mtime":1611660947784,"results":"19","hashOfConfig":"16"},{"size":648,"mtime":1611661105917,"results":"20","hashOfConfig":"16"},{"size":102,"mtime":1611660992974,"results":"21","hashOfConfig":"16"},{"size":11354,"mtime":1611661253184,"results":"22","hashOfConfig":"16"},{"size":710,"mtime":1611660992971,"results":"23","hashOfConfig":"16"},{"size":8172,"mtime":1611660992973,"results":"24","hashOfConfig":"16"},{"size":829,"mtime":1611661070807,"results":"25","hashOfConfig":"16"},{"size":2029,"mtime":1611661070806,"results":"26","hashOfConfig":"16"},{"size":1511,"mtime":1611661070813,"results":"27","hashOfConfig":"16"},{"size":60,"mtime":1611661070810,"results":"28","hashOfConfig":"16"},{"size":760,"mtime":1611661070809,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1poepn7",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},"/Users/gleb/projects/proofOfGold/src/index.tsx",[],"/Users/gleb/projects/proofOfGold/src/App.tsx",[],"/Users/gleb/projects/proofOfGold/src/components/index.ts",[],["62","63"],"/Users/gleb/projects/proofOfGold/src/components/Header/index.tsx",[],"/Users/gleb/projects/proofOfGold/src/components/Button/index.tsx",[],"/Users/gleb/projects/proofOfGold/src/pages/index.ts",[],"/Users/gleb/projects/proofOfGold/src/pages/Home/index.tsx",[],"/Users/gleb/projects/proofOfGold/src/components/InfoCard/index.tsx",["64"],"import React from 'react';\n\nimport './InfoCard.scss';\n\ninterface infoCard {}\n\nconst infoCard: React.FC<\n  React.HTMLAttributes<HTMLDivElement> & infoCard\n> = () => {\n  return <div className=\"i-card\"></div>;\n};\n\nexport default infoCard;\n","/Users/gleb/projects/proofOfGold/src/pages/Franchise/index.tsx",[],"/Users/gleb/projects/proofOfGold/src/components/ProductCard/index.tsx",["65"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Button } from '../../components';\n\nimport './ProductCard.scss';\n\nimport { ReactComponent as Cart } from '../../assets/img/cart.svg';\n\ninterface ProductCard {\n  img: string;\n  name: string;\n  cost: string;\n}\n\nconst ProductCard: React.FC<ProductCard> = ({ name, cost, img }) => {\n  return (\n    <div className=\"p-card\">\n      <Link to={`/product/id`} className=\"p-card__img\">\n        <img src={img} alt=\"\" />\n      </Link>\n      <div className=\"p-card__box\">\n        <div className=\"p-card__name\">{name}</div>\n        <div className=\"p-card__cost h2\">${cost}</div>\n        <Button type=\"sm\" centered={true}>\n          <Cart className=\"p-card__cart\" />\n          ADD to cart\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","/Users/gleb/projects/proofOfGold/src/components/ContactUsForm/index.tsx",[],"/Users/gleb/projects/proofOfGold/src/utils/validate.ts",[],"/Users/gleb/projects/proofOfGold/src/modules/index.ts",[],"/Users/gleb/projects/proofOfGold/src/modules/ContactUsForm/index.tsx",["66"],"import React from 'react';\nimport { withFormik } from 'formik';\n\nimport { ContactUsForm } from '../../components';\nimport { validateForm } from '../../utils/validate';\n\ninterface ContactUsFormProps {\n  username: string;\n  email: string;\n  message: string;\n}\n\nexport default () => {\n  const FormWithFormik = withFormik<{}, ContactUsFormProps>({\n    enableReinitialize: true,\n    mapPropsToValues: () => ({\n      username: '',\n      email: '',\n      message: '',\n    }),\n    validate: (values) => {\n      let errors = {};\n\n      validateForm({ isAuth: false, values, errors });\n\n      return errors;\n    },\n\n    handleSubmit: (values) => {\n      console.log(values);\n    },\n\n    displayName: 'ContactUsForm',\n  })(ContactUsForm);\n  return <FormWithFormik />;\n};\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":14,"column":7,"nodeType":"73","messageId":"74","endLine":14,"endColumn":35},{"ruleId":"71","severity":1,"message":"75","line":16,"column":7,"nodeType":"73","messageId":"74","endLine":16,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":13,"column":1,"nodeType":"78","endLine":36,"endColumn":3},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-redeclare","'infoCard' is already defined.","Identifier","redeclared","'ProductCard' is already defined.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]